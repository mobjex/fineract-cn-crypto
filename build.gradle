/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath ("io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE")
    }
}

plugins {
    id "com.github.hierynomus.license" version "0.13.1"
    id("org.nosphere.apache.rat") version "0.3.1"
}

group 'com.github.mobjex'
version 'develop-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'

tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

ext.versions = [
        spring        : '4.3.2.RELEASE',
        springsecurity: '4.0.2.RELEASE',
        logback       : '1.1.3',
        slf4j         : '1.7.13',
        findbugs      : '3.0.1',
        junit         : '4.12',
        springtest    : '4.3.2.RELEASE'
]

configurations {
    compile.exclude group: 'commons-logging', module: 'commons-logging'
}

dependencies {
    compile(
            [group: 'org.springframework', name: 'spring-context', version: versions.spring],
            [group: 'org.springframework.security', name: 'spring-security-core', version: versions.springsecurity],
            [group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback],
            [group: 'org.slf4j', name: 'jcl-over-slf4j', version: versions.slf4j],
            [group: 'com.google.code.findbugs', name: 'jsr305', version: versions.findbugs]
    )
    testCompile(
            [group: 'junit', name: 'junit', version: versions.junit],
            [group: 'org.springframework', name: 'spring-test', version: versions.springtest]
    )
}

license {
    header rootProject.file('HEADER')
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

publishing {
    publications {
        babel(MavenPublication) {
            from components.java
            groupId project.group
            artifactId project.name
            version project.version
        }
    }
}

rat {
    // List of exclude directives, defaults to ['**/.gradle/**']
    excludes = [
            ".idea/**",
            ".gradle/**",
            "gradle/**",
            "build/**",
            "gradlew",
            "gradlew.bat",
            "README.md",
            "src/test/resources/.salt",
            "src/test/resources/.secret"
    ]

}
